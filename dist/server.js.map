{"version":3,"sources":["parse-href.js","dispatcher.js","server.js"],"names":["parse_href","href","sub_domain","domain","path","query","hash","test","parts","split","path_str","query_str","filter","part","slice","qs","parse","hash_str","full_path","x","log","console","getSomeJSON","b","base","data","then","r","json","dispatch_w_config","h","ph","route_obj","a","c","d","EquivMap","get","length","el","document","createElement","innerText","JSON","stringify","body","appendChild","PORT","UP_STAGE","process","env","server","http","createServer","listen","e","on","req","res","url","end"],"mappings":"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","file":"server.js","sourceRoot":"..","sourcesContent":["import qs from \"querystring\"\r\n\r\n// import fetch from \"node-fetch\"\r\n\r\n// const log = console.log\r\n// let hrefs = [\r\n//   \"https://api.census.gov/data.html\",\r\n//   \"https://api.census.gov/data/2017/acs/acs1?query=some%20text\",\r\n//   \"https://census.gov/developers/apis#getting-started\",\r\n//   \"https://census.gov/developers/apis/?slash=true\",\r\n//   \"https://www.census.gov/developers/apis/?slash=true#focus\",\r\n//   \"https://www.census.gov/developers/apis/#focus?slash=true\",\r\n//   \"https://www.census.gov/developers/apis#focus?slash=false\",\r\n//   \"http://www.example.com/path/to/resource?query=text&search=find+me#focus-heading\",\r\n//   \"http://api.localhost:1234/todos/2\",\r\n//   \"/todos/2\"\r\n// ]\r\n\r\nexport const parse_href = href => {\r\n  let sub_domain = []\r\n  let domain = []\r\n  let path = []\r\n  let query = {}\r\n  let hash = \"\"\r\n  if (/http/g.test(href)) {\r\n    const parts = href.split(/(?=\\?)|(?=#)/g)\r\n    const path_str = parts[0]\r\n    const query_str = parts.filter(part => part.slice(0, 1) === \"?\")[0] || \"\"\r\n    query = qs.parse(query_str.slice(1))\r\n    const hash_str = parts.filter(part => part.slice(0, 1) === \"#\")[0] || \"\"\r\n    hash = hash_str.slice(1)\r\n    const full_path = path_str.split(\"/\").filter(x => x !== \"\")\r\n    domain = full_path[1].split(\".\").slice(-2)\r\n    sub_domain = full_path[1].split(\".\").slice(0, -2)\r\n    path = full_path.slice(2)\r\n  } else {\r\n    path = href.split(\"/\").filter(x => x !== \"\")\r\n  }\r\n  return { sub_domain, domain, path, query, hash }\r\n}\r\n\r\n// console.time(\"start\")\r\n// let all = hrefs.map(x => parse_href(x)) //?\r\n\r\n// let test = all.slice(-1)[0]\r\n// console.timeEnd(\"start\")\r\n\r\n// qs.encode(test.query).replace(\"%20\", \"+\") //?\r\n\r\n// fetch(\"http://api.example.localhost:1234/users/2\", {\r\n//   headers: { \"Content-Type\": \"application/json\" }\r\n// }).then(r => r.text()) //?\r\n","import { parse_href } from \"./parse-href\"\r\nimport { EquivMap } from \"@thi.ng/associative\"\r\nimport fetch from \"node-fetch\"\r\n\r\nconst log = console.log\r\n\r\nconst getSomeJSON = async (query, path, b) => {\r\n  const base = \"https://jsonplaceholder.typicode.com/\"\r\n  const data = b\r\n    ? await fetch(`${base}${path}/${b}`).then(r => r.json())\r\n    : await fetch(`${base}${path}/`).then(r => r.json())\r\n  return data\r\n}\r\nexport const dispatch_w_config = async h => {\r\n  const ph = parse_href\r\n  const route_obj = ph(h)\r\n  log(route_obj)\r\n  const {\r\n    sub_domain,\r\n    domain,\r\n    path: [a, b, c, d],\r\n    query,\r\n    hash\r\n  } = route_obj\r\n  // prettier-ignore\r\n  const data = await new EquivMap([\r\n      [{ ...ph(h), path: [\"todos\"] },    getSomeJSON(query, \"todos\", null)],\r\n      [{ ...ph(h), path: [\"todos\", b] }, getSomeJSON(query, \"todos\", b)],\r\n      [{ ...ph(h), path: [\"users\"] },    getSomeJSON(query, \"users\", null)],\r\n      [{ ...ph(h), path: [\"users\", b] }, getSomeJSON(query, \"users\", b)]\r\n    ]).get(route_obj) || null\r\n\r\n  // this is used by importing dispatch_w_config into the server config.\r\n  if (domain.length < 1) return data\r\n  // this would be an hdom + spec -> page\r\n  const el = document.createElement(\"code\")\r\n  el.innerText = JSON.stringify(data, null, 2)\r\n  if (el !== \"404\") document.body.appendChild(el)\r\n}\r\n","import http from \"http\"\r\nimport { dispatch_w_config } from \"./dispatcher\"\r\nconst { PORT = 3000, UP_STAGE } = process.env\r\n\r\nconst server = http.createServer()\r\nconst log = console.log\r\n\r\nserver.listen(PORT, e => {\r\n  if (e) return log(\"Error:\", e)\r\n  log(`server is listening on ${PORT}...`)\r\n})\r\n\r\nserver.on(\"request\", async (req, res) => {\r\n  if (req.url === \"/favicon.ico\") log(\"no favicon yet, ðŸ˜ž\")\r\n\r\n  log(\"PORT:\", PORT)\r\n  // log(\"request:\", req) // -> url: '/',\r\n  let data = await dispatch_w_config(req.url)\r\n  log(data)\r\n  res.end(JSON.stringify(data))\r\n})\r\n"]}