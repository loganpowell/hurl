{"id":"node_modules/@thi.ng/transducers/xform/side-effect.js","dependencies":[{"name":"C:\\Users\\logan\\Projects\\thi-ng\\hurl\\package.json","includedInParent":true,"mtime":1575581197116},{"name":"C:\\Users\\logan\\Projects\\thi-ng\\hurl\\node_modules\\@thi.ng\\transducers\\package.json","includedInParent":true,"mtime":1575409828371},{"name":"./map","loc":{"line":1,"column":20},"parent":"C:\\Users\\logan\\Projects\\thi-ng\\hurl\\node_modules\\@thi.ng\\transducers\\xform\\side-effect.js","resolved":"C:\\Users\\logan\\Projects\\thi-ng\\hurl\\node_modules\\@thi.ng\\transducers\\xform\\map.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sideEffect = void 0;\n\nvar _map = require(\"./map\");\n\n/**\n * Helper transducer. Applies given `fn` to each input value, presumably\n * for side effects. Discards function's result and yields original\n * inputs.\n *\n * @param fn side effect\n */\nconst sideEffect = fn => (0, _map.map)(x => (fn(x), x));\n\nexports.sideEffect = sideEffect;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/@thi.ng/transducers/xform/side-effect.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/@thi.ng/transducers/xform/side-effect.js","original":{"line":2,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/@thi.ng/transducers/xform/side-effect.js","original":{"line":9,"column":7}},{"name":"sideEffect","generated":{"line":17,"column":6},"source":"node_modules/@thi.ng/transducers/xform/side-effect.js","original":{"line":9,"column":13}},{"generated":{"line":17,"column":16},"source":"node_modules/@thi.ng/transducers/xform/side-effect.js","original":{"line":9,"column":23}},{"name":"fn","generated":{"line":17,"column":19},"source":"node_modules/@thi.ng/transducers/xform/side-effect.js","original":{"line":9,"column":27}},{"generated":{"line":17,"column":21},"source":"node_modules/@thi.ng/transducers/xform/side-effect.js","original":{"line":9,"column":26}},{"generated":{"line":17,"column":25},"source":"node_modules/@thi.ng/transducers/xform/side-effect.js","original":{"line":9,"column":34}},{"name":"x","generated":{"line":17,"column":39},"source":"node_modules/@thi.ng/transducers/xform/side-effect.js","original":{"line":9,"column":39}},{"generated":{"line":17,"column":40},"source":"node_modules/@thi.ng/transducers/xform/side-effect.js","original":{"line":9,"column":38}},{"name":"fn","generated":{"line":17,"column":45},"source":"node_modules/@thi.ng/transducers/xform/side-effect.js","original":{"line":9,"column":46}},{"generated":{"line":17,"column":47},"source":"node_modules/@thi.ng/transducers/xform/side-effect.js","original":{"line":9,"column":48}},{"name":"x","generated":{"line":17,"column":48},"source":"node_modules/@thi.ng/transducers/xform/side-effect.js","original":{"line":9,"column":49}},{"generated":{"line":17,"column":49},"source":"node_modules/@thi.ng/transducers/xform/side-effect.js","original":{"line":9,"column":48}},{"generated":{"line":17,"column":50},"source":"node_modules/@thi.ng/transducers/xform/side-effect.js","original":{"line":9,"column":46}},{"name":"x","generated":{"line":17,"column":52},"source":"node_modules/@thi.ng/transducers/xform/side-effect.js","original":{"line":9,"column":53}},{"generated":{"line":17,"column":53},"source":"node_modules/@thi.ng/transducers/xform/side-effect.js","original":{"line":9,"column":38}},{"generated":{"line":17,"column":54},"source":"node_modules/@thi.ng/transducers/xform/side-effect.js","original":{"line":9,"column":34}},{"generated":{"line":17,"column":55},"source":"node_modules/@thi.ng/transducers/xform/side-effect.js","original":{"line":9,"column":7}}],"sources":{"node_modules/@thi.ng/transducers/xform/side-effect.js":"import { map } from \"./map\";\n/**\n * Helper transducer. Applies given `fn` to each input value, presumably\n * for side effects. Discards function's result and yields original\n * inputs.\n *\n * @param fn side effect\n */\nexport const sideEffect = (fn) => map((x) => (fn(x), x));\n"},"lineCount":null}},"error":null,"hash":"31f27627eaf45b8026d66fe3542245ae","cacheData":{"env":{}}}