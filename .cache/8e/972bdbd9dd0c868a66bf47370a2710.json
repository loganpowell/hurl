{"id":"node_modules/@thi.ng/paths/mut-in-many.js","dependencies":[{"name":"C:\\Users\\logan\\Projects\\thi-ng\\hurl\\package.json","includedInParent":true,"mtime":1575488721738},{"name":"C:\\Users\\logan\\Projects\\thi-ng\\hurl\\node_modules\\@thi.ng\\paths\\package.json","includedInParent":true,"mtime":1575409966754},{"name":"@thi.ng/errors","loc":{"line":1,"column":28},"parent":"C:\\Users\\logan\\Projects\\thi-ng\\hurl\\node_modules\\@thi.ng\\paths\\mut-in-many.js","resolved":"C:\\Users\\logan\\Projects\\thi-ng\\hurl\\node_modules\\@thi.ng\\errors\\index.js"},{"name":"./mut-in","loc":{"line":2,"column":23},"parent":"C:\\Users\\logan\\Projects\\thi-ng\\hurl\\node_modules\\@thi.ng\\paths\\mut-in-many.js","resolved":"C:\\Users\\logan\\Projects\\thi-ng\\hurl\\node_modules\\@thi.ng\\paths\\mut-in.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mutInMany = void 0;\n\nvar _errors = require(\"@thi.ng/errors\");\n\nvar _mutIn = require(\"./mut-in\");\n\n/**\n * Similar to {@link mutIn}, but takes any number of path-value pairs as\n * args and applies them in sequence using `mutIn()`. All key paths must\n * already be present in the given data structure until their\n * penultimate key.\n *\n * @remarks\n * Unlike {@link mutIn}, this function does not use type checked paths.\n *\n * @example\n * ```ts\n * mutInMany(\n *   { a: { b: 1 }, x: { y: { z: 2 } } },\n *   \"a.b\", 10,\n *   \"x.y.z\", 20\n * )\n * // { a: { b: 10 }, x: { y: { z: 20 } } }\n * ```\n *\n * @param state\n * @param pairs\n */\nconst mutInMany = (state, ...pairs) => {\n  const n = pairs.length;\n  n & 1 && (0, _errors.illegalArgs)(`require even number of args (got ${pairs.length})`);\n\n  for (let i = 0; i < n && state; i += 2) {\n    state = (0, _mutIn.mutInT)(state, pairs[i], pairs[i + 1]);\n  }\n\n  return state;\n};\n\nexports.mutInMany = mutInMany;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":3,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":25,"column":7}},{"name":"mutInMany","generated":{"line":34,"column":6},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":25,"column":13}},{"generated":{"line":34,"column":15},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":25,"column":22}},{"generated":{"line":34,"column":18},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":25,"column":25}},{"name":"state","generated":{"line":34,"column":19},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":25,"column":26}},{"generated":{"line":34,"column":24},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":25,"column":25}},{"generated":{"line":34,"column":26},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":25,"column":33}},{"name":"pairs","generated":{"line":34,"column":29},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":25,"column":36}},{"generated":{"line":34,"column":34},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":25,"column":25}},{"generated":{"line":34,"column":39},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":25,"column":46}},{"generated":{"line":35,"column":0},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":26,"column":4}},{"name":"n","generated":{"line":35,"column":8},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":26,"column":10}},{"generated":{"line":35,"column":9},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":26,"column":11}},{"name":"pairs","generated":{"line":35,"column":12},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":26,"column":14}},{"generated":{"line":35,"column":17},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":26,"column":19}},{"name":"length","generated":{"line":35,"column":18},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":26,"column":20}},{"generated":{"line":35,"column":24},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":26,"column":4}},{"name":"n","generated":{"line":36,"column":0},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":27,"column":4}},{"name":"n","generated":{"line":36,"column":2},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":27,"column":4}},{"generated":{"line":36,"column":3},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":27,"column":5}},{"generated":{"line":36,"column":6},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":27,"column":8}},{"generated":{"line":36,"column":7},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":27,"column":4}},{"generated":{"line":36,"column":11},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":27,"column":13}},{"generated":{"line":36,"column":36},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":27,"column":26}},{"name":"pairs","generated":{"line":36,"column":72},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":27,"column":61}},{"generated":{"line":36,"column":77},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":27,"column":66}},{"name":"length","generated":{"line":36,"column":78},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":27,"column":67}},{"generated":{"line":36,"column":84},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":27,"column":74}},{"generated":{"line":36,"column":87},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":27,"column":13}},{"generated":{"line":36,"column":88},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":27,"column":4}},{"generated":{"line":38,"column":0},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":28,"column":4}},{"generated":{"line":38,"column":7},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":28,"column":9}},{"name":"i","generated":{"line":38,"column":11},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":28,"column":13}},{"generated":{"line":38,"column":12},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":28,"column":14}},{"generated":{"line":38,"column":15},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":28,"column":17}},{"generated":{"line":38,"column":16},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":28,"column":4}},{"name":"i","generated":{"line":38,"column":18},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":28,"column":20}},{"generated":{"line":38,"column":19},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":28,"column":21}},{"name":"n","generated":{"line":38,"column":22},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":28,"column":24}},{"generated":{"line":38,"column":23},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":28,"column":20}},{"name":"state","generated":{"line":38,"column":27},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":28,"column":29}},{"generated":{"line":38,"column":32},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":28,"column":4}},{"name":"i","generated":{"line":38,"column":34},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":28,"column":36}},{"generated":{"line":38,"column":35},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":28,"column":37}},{"generated":{"line":38,"column":39},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":28,"column":41}},{"generated":{"line":38,"column":40},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":28,"column":4}},{"generated":{"line":38,"column":42},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":28,"column":44}},{"name":"state","generated":{"line":39,"column":0},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":29,"column":8}},{"name":"state","generated":{"line":39,"column":4},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":29,"column":8}},{"generated":{"line":39,"column":9},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":29,"column":13}},{"generated":{"line":39,"column":12},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":29,"column":16}},{"name":"state","generated":{"line":39,"column":31},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":29,"column":23}},{"generated":{"line":39,"column":36},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":29,"column":16}},{"name":"pairs","generated":{"line":39,"column":38},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":29,"column":30}},{"generated":{"line":39,"column":43},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":29,"column":35}},{"name":"i","generated":{"line":39,"column":44},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":29,"column":36}},{"generated":{"line":39,"column":45},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":29,"column":35}},{"generated":{"line":39,"column":46},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":29,"column":16}},{"name":"pairs","generated":{"line":39,"column":48},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":29,"column":40}},{"generated":{"line":39,"column":53},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":29,"column":45}},{"name":"i","generated":{"line":39,"column":54},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":29,"column":46}},{"generated":{"line":39,"column":55},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":29,"column":47}},{"generated":{"line":39,"column":58},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":29,"column":50}},{"generated":{"line":39,"column":59},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":29,"column":45}},{"generated":{"line":39,"column":60},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":29,"column":16}},{"generated":{"line":39,"column":61},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":29,"column":8}},{"generated":{"line":40,"column":0},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":30,"column":5}},{"generated":{"line":42,"column":0},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":31,"column":4}},{"name":"state","generated":{"line":42,"column":9},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":31,"column":11}},{"generated":{"line":42,"column":14},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":31,"column":4}},{"generated":{"line":43,"column":0},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":32,"column":1}},{"generated":{"line":43,"column":1},"source":"node_modules/@thi.ng/paths/mut-in-many.js","original":{"line":25,"column":7}}],"sources":{"node_modules/@thi.ng/paths/mut-in-many.js":"import { illegalArgs } from \"@thi.ng/errors\";\nimport { mutInT } from \"./mut-in\";\n/**\n * Similar to {@link mutIn}, but takes any number of path-value pairs as\n * args and applies them in sequence using `mutIn()`. All key paths must\n * already be present in the given data structure until their\n * penultimate key.\n *\n * @remarks\n * Unlike {@link mutIn}, this function does not use type checked paths.\n *\n * @example\n * ```ts\n * mutInMany(\n *   { a: { b: 1 }, x: { y: { z: 2 } } },\n *   \"a.b\", 10,\n *   \"x.y.z\", 20\n * )\n * // { a: { b: 10 }, x: { y: { z: 20 } } }\n * ```\n *\n * @param state\n * @param pairs\n */\nexport const mutInMany = (state, ...pairs) => {\n    const n = pairs.length;\n    n & 1 && illegalArgs(`require even number of args (got ${pairs.length})`);\n    for (let i = 0; i < n && state; i += 2) {\n        state = mutInT(state, pairs[i], pairs[i + 1]);\n    }\n    return state;\n};\n"},"lineCount":null}},"error":null,"hash":"61cb49077c85a999ac094b61daccd5c9","cacheData":{"env":{}}}