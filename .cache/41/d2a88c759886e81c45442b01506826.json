{"id":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","dependencies":[{"name":"C:\\Users\\logan\\Projects\\thi-ng\\hurl\\package.json","includedInParent":true,"mtime":1575737482432},{"name":"C:\\Users\\logan\\Projects\\thi-ng\\hurl\\node_modules\\@thi.ng\\transducers\\package.json","includedInParent":true,"mtime":1575409828371}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.normRange = normRange;\n\n/**\n * Yields sequence of `n+1` monotonically increasing numbers in the\n * closed interval (0.0 .. 1.0). If `n <= 0`, yields nothing.\n *\n * ```\n * [...normRange(4)]\n * // [0, 0.25, 0.5, 0.75, 1.0]\n * ```\n *\n * @param n number of steps\n * @param inclLast include last value (i.e. `1.0`)\n */\nfunction* normRange(n, inclLast = true) {\n  if (n > 0) {\n    for (let i = 0, m = inclLast ? n + 1 : n; i < m; i++) {\n      yield i / n;\n    }\n  }\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":1,"column":0}},{"generated":{"line":20,"column":0},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":13,"column":7}},{"name":"normRange","generated":{"line":20,"column":10},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":13,"column":17}},{"generated":{"line":20,"column":19},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":13,"column":7}},{"name":"n","generated":{"line":20,"column":20},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":13,"column":27}},{"generated":{"line":20,"column":21},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":13,"column":7}},{"name":"inclLast","generated":{"line":20,"column":23},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":13,"column":30}},{"generated":{"line":20,"column":31},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":13,"column":38}},{"generated":{"line":20,"column":34},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":13,"column":41}},{"generated":{"line":20,"column":38},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":13,"column":7}},{"generated":{"line":20,"column":40},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":13,"column":47}},{"generated":{"line":21,"column":0},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":14,"column":4}},{"name":"n","generated":{"line":21,"column":6},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":14,"column":8}},{"generated":{"line":21,"column":7},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":14,"column":9}},{"generated":{"line":21,"column":10},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":14,"column":12}},{"generated":{"line":21,"column":11},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":14,"column":4}},{"generated":{"line":21,"column":13},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":14,"column":15}},{"generated":{"line":22,"column":0},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":15,"column":8}},{"generated":{"line":22,"column":9},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":15,"column":13}},{"name":"i","generated":{"line":22,"column":13},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":15,"column":17}},{"generated":{"line":22,"column":14},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":15,"column":18}},{"generated":{"line":22,"column":17},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":15,"column":21}},{"generated":{"line":22,"column":18},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":15,"column":13}},{"name":"m","generated":{"line":22,"column":20},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":15,"column":24}},{"generated":{"line":22,"column":21},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":15,"column":25}},{"name":"inclLast","generated":{"line":22,"column":24},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":15,"column":28}},{"generated":{"line":22,"column":32},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":15,"column":36}},{"name":"n","generated":{"line":22,"column":35},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":15,"column":39}},{"generated":{"line":22,"column":36},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":15,"column":40}},{"generated":{"line":22,"column":39},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":15,"column":43}},{"generated":{"line":22,"column":40},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":15,"column":36}},{"name":"n","generated":{"line":22,"column":43},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":15,"column":47}},{"generated":{"line":22,"column":44},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":15,"column":8}},{"name":"i","generated":{"line":22,"column":46},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":15,"column":50}},{"generated":{"line":22,"column":47},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":15,"column":51}},{"name":"m","generated":{"line":22,"column":50},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":15,"column":54}},{"generated":{"line":22,"column":51},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":15,"column":8}},{"name":"i","generated":{"line":22,"column":53},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":15,"column":57}},{"generated":{"line":22,"column":54},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":15,"column":58}},{"generated":{"line":22,"column":56},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":15,"column":8}},{"generated":{"line":22,"column":58},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":15,"column":62}},{"generated":{"line":23,"column":0},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":16,"column":12}},{"name":"i","generated":{"line":23,"column":12},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":16,"column":18}},{"generated":{"line":23,"column":13},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":16,"column":19}},{"name":"n","generated":{"line":23,"column":16},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":16,"column":22}},{"generated":{"line":23,"column":17},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":16,"column":12}},{"generated":{"line":24,"column":0},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":17,"column":9}},{"generated":{"line":25,"column":0},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":18,"column":5}},{"generated":{"line":26,"column":0},"source":"../../node_modules/@thi.ng/transducers/iter/norm-range.js","original":{"line":19,"column":1}}],"sources":{"../../node_modules/@thi.ng/transducers/iter/norm-range.js":"/**\n * Yields sequence of `n+1` monotonically increasing numbers in the\n * closed interval (0.0 .. 1.0). If `n <= 0`, yields nothing.\n *\n * ```\n * [...normRange(4)]\n * // [0, 0.25, 0.5, 0.75, 1.0]\n * ```\n *\n * @param n number of steps\n * @param inclLast include last value (i.e. `1.0`)\n */\nexport function* normRange(n, inclLast = true) {\n    if (n > 0) {\n        for (let i = 0, m = inclLast ? n + 1 : n; i < m; i++) {\n            yield i / n;\n        }\n    }\n}\n"},"lineCount":null}},"error":null,"hash":"5771cf33194614a2e6ae648fe10aa66b","cacheData":{"env":{}}}