{"id":"node_modules/@thi.ng/paths/set-in-many.js","dependencies":[{"name":"C:\\Users\\logan\\Projects\\thi-ng\\hurl\\package.json","includedInParent":true,"mtime":1575488721738},{"name":"C:\\Users\\logan\\Projects\\thi-ng\\hurl\\node_modules\\@thi.ng\\paths\\package.json","includedInParent":true,"mtime":1575409966754},{"name":"@thi.ng/errors","loc":{"line":1,"column":28},"parent":"C:\\Users\\logan\\Projects\\thi-ng\\hurl\\node_modules\\@thi.ng\\paths\\set-in-many.js","resolved":"C:\\Users\\logan\\Projects\\thi-ng\\hurl\\node_modules\\@thi.ng\\errors\\index.js"},{"name":"./set-in","loc":{"line":2,"column":23},"parent":"C:\\Users\\logan\\Projects\\thi-ng\\hurl\\node_modules\\@thi.ng\\paths\\set-in-many.js","resolved":"C:\\Users\\logan\\Projects\\thi-ng\\hurl\\node_modules\\@thi.ng\\paths\\set-in.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setInMany = void 0;\n\nvar _errors = require(\"@thi.ng/errors\");\n\nvar _setIn = require(\"./set-in\");\n\n/**\n * Similar to {@link setIn}, but takes any number of path-value pairs as\n * args and applies them in sequence by calling `setIn()` for each.\n *\n * @remarks\n * Any key paths missing in the data structure will be created. Does\n * *not* mutate original (instead use {@link mutInMany} for this\n * purpose).\n *\n * Unlike {@link setIn}, this function does not use type checked paths.\n *\n * ```\n * setInMany({}, \"a.b\", 10, \"x.y.z\", 20)\n * // { a: { b: 10 }, x: { y: { z: 20 } } }\n * ```\n *\n * @param state\n * @param pairs\n */\nconst setInMany = (state, ...pairs) => {\n  const n = pairs.length;\n  n & 1 && (0, _errors.illegalArgs)(`require even number of KV args (got ${pairs.length})`);\n\n  for (let i = 0; i < n; i += 2) {\n    state = (0, _setIn.setInT)(state, pairs[i], pairs[i + 1]);\n  }\n\n  return state;\n};\n\nexports.setInMany = setInMany;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":3,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":22,"column":7}},{"name":"setInMany","generated":{"line":31,"column":6},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":22,"column":13}},{"generated":{"line":31,"column":15},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":22,"column":22}},{"generated":{"line":31,"column":18},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":22,"column":25}},{"name":"state","generated":{"line":31,"column":19},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":22,"column":26}},{"generated":{"line":31,"column":24},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":22,"column":25}},{"generated":{"line":31,"column":26},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":22,"column":33}},{"name":"pairs","generated":{"line":31,"column":29},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":22,"column":36}},{"generated":{"line":31,"column":34},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":22,"column":25}},{"generated":{"line":31,"column":39},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":22,"column":46}},{"generated":{"line":32,"column":0},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":23,"column":4}},{"name":"n","generated":{"line":32,"column":8},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":23,"column":10}},{"generated":{"line":32,"column":9},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":23,"column":11}},{"name":"pairs","generated":{"line":32,"column":12},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":23,"column":14}},{"generated":{"line":32,"column":17},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":23,"column":19}},{"name":"length","generated":{"line":32,"column":18},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":23,"column":20}},{"generated":{"line":32,"column":24},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":23,"column":4}},{"name":"n","generated":{"line":33,"column":0},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":24,"column":4}},{"name":"n","generated":{"line":33,"column":2},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":24,"column":4}},{"generated":{"line":33,"column":3},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":24,"column":5}},{"generated":{"line":33,"column":6},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":24,"column":8}},{"generated":{"line":33,"column":7},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":24,"column":4}},{"generated":{"line":33,"column":11},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":25,"column":8}},{"generated":{"line":33,"column":36},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":25,"column":21}},{"name":"pairs","generated":{"line":33,"column":75},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":25,"column":59}},{"generated":{"line":33,"column":80},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":25,"column":64}},{"name":"length","generated":{"line":33,"column":81},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":25,"column":65}},{"generated":{"line":33,"column":87},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":25,"column":72}},{"generated":{"line":33,"column":90},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":25,"column":8}},{"generated":{"line":33,"column":91},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":24,"column":4}},{"generated":{"line":35,"column":0},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":26,"column":4}},{"generated":{"line":35,"column":7},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":26,"column":9}},{"name":"i","generated":{"line":35,"column":11},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":26,"column":13}},{"generated":{"line":35,"column":12},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":26,"column":14}},{"generated":{"line":35,"column":15},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":26,"column":17}},{"generated":{"line":35,"column":16},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":26,"column":4}},{"name":"i","generated":{"line":35,"column":18},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":26,"column":20}},{"generated":{"line":35,"column":19},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":26,"column":21}},{"name":"n","generated":{"line":35,"column":22},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":26,"column":24}},{"generated":{"line":35,"column":23},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":26,"column":4}},{"name":"i","generated":{"line":35,"column":25},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":26,"column":27}},{"generated":{"line":35,"column":26},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":26,"column":28}},{"generated":{"line":35,"column":30},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":26,"column":32}},{"generated":{"line":35,"column":31},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":26,"column":4}},{"generated":{"line":35,"column":33},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":26,"column":35}},{"name":"state","generated":{"line":36,"column":0},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":27,"column":8}},{"name":"state","generated":{"line":36,"column":4},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":27,"column":8}},{"generated":{"line":36,"column":9},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":27,"column":13}},{"generated":{"line":36,"column":12},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":27,"column":16}},{"name":"state","generated":{"line":36,"column":31},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":27,"column":23}},{"generated":{"line":36,"column":36},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":27,"column":16}},{"name":"pairs","generated":{"line":36,"column":38},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":27,"column":30}},{"generated":{"line":36,"column":43},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":27,"column":35}},{"name":"i","generated":{"line":36,"column":44},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":27,"column":36}},{"generated":{"line":36,"column":45},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":27,"column":35}},{"generated":{"line":36,"column":46},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":27,"column":16}},{"name":"pairs","generated":{"line":36,"column":48},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":27,"column":40}},{"generated":{"line":36,"column":53},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":27,"column":45}},{"name":"i","generated":{"line":36,"column":54},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":27,"column":46}},{"generated":{"line":36,"column":55},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":27,"column":47}},{"generated":{"line":36,"column":58},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":27,"column":50}},{"generated":{"line":36,"column":59},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":27,"column":45}},{"generated":{"line":36,"column":60},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":27,"column":16}},{"generated":{"line":36,"column":61},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":27,"column":8}},{"generated":{"line":37,"column":0},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":28,"column":5}},{"generated":{"line":39,"column":0},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":29,"column":4}},{"name":"state","generated":{"line":39,"column":9},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":29,"column":11}},{"generated":{"line":39,"column":14},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":29,"column":4}},{"generated":{"line":40,"column":0},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":30,"column":1}},{"generated":{"line":40,"column":1},"source":"node_modules/@thi.ng/paths/set-in-many.js","original":{"line":22,"column":7}}],"sources":{"node_modules/@thi.ng/paths/set-in-many.js":"import { illegalArgs } from \"@thi.ng/errors\";\nimport { setInT } from \"./set-in\";\n/**\n * Similar to {@link setIn}, but takes any number of path-value pairs as\n * args and applies them in sequence by calling `setIn()` for each.\n *\n * @remarks\n * Any key paths missing in the data structure will be created. Does\n * *not* mutate original (instead use {@link mutInMany} for this\n * purpose).\n *\n * Unlike {@link setIn}, this function does not use type checked paths.\n *\n * ```\n * setInMany({}, \"a.b\", 10, \"x.y.z\", 20)\n * // { a: { b: 10 }, x: { y: { z: 20 } } }\n * ```\n *\n * @param state\n * @param pairs\n */\nexport const setInMany = (state, ...pairs) => {\n    const n = pairs.length;\n    n & 1 &&\n        illegalArgs(`require even number of KV args (got ${pairs.length})`);\n    for (let i = 0; i < n; i += 2) {\n        state = setInT(state, pairs[i], pairs[i + 1]);\n    }\n    return state;\n};\n"},"lineCount":null}},"error":null,"hash":"016d3766faa2c77935b93ce791c887a3","cacheData":{"env":{}}}